/*
 * Copyright (c) 2018 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

apply plugin: 'war'

dependencies {
  compile "org.springframework:spring-aop:${springVersion}"
  compile "org.springframework:spring-beans:${springVersion}"
  compile "org.springframework:spring-context:${springVersion}"
  compile "org.springframework:spring-context-support:${springVersion}"
  compile "org.springframework:spring-core:${springVersion}"
  compile "org.springframework:spring-expression:${springVersion}"
  compile "org.springframework:spring-web:${springVersion}"
  compile "org.springframework:spring-webmvc:${springVersion}"

  runtime "org.springframework:spring-aspects:${springVersion}"
  runtime "org.springframework:spring-oxm:${springVersion}"
  runtime 'commons-fileupload:commons-fileupload:1.3.2'

  testCompile "javax.servlet:javax.servlet-api:${servletAPIVersion}"

  // have to use output since we exclude the dependent classes from jar :(
  testCompile project(subprojectBase + 'gemfire-core').sourceSets.main.output
  testCompile project(subprojectBase + 'gemfire-core')
  testCompile project(subprojectBase + 'gemfire-junit')
}

war {
  classpath configurations.runtime 
  classpath project(subprojectBase + 'gemfire-core').webJar.archivePath
}
