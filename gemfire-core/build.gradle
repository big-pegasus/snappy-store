/*
 * Copyright (c) 2017 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

sourceSets {
  jca {
    compileClasspath += configurations.compile
    runtimeClasspath += configurations.runtime
  }
}

configurations {
  //declaring new configuration that will be used to associate with artifacts
  archives
}

dependencies {
  compileOnly files("${System.getProperty('java.home')}/../lib/tools.jar")
  compileOnly 'antlr:antlr:2.7.7'
  compile "net.java.dev.jna:jna:${jnaVersion}"
  compile 'commons-io:commons-io:2.5'
  compile 'commons-logging:commons-logging:1.2'
  compile 'commons-lang:commons-lang:2.6'
  compile('commons-modeler:commons-modeler:2.0.1') {
    exclude(group: 'xml-apis', module: 'xml-apis')
  }
  compile 'commons-cli:commons-cli:1.4'
  compile 'javax.mail:javax.mail-api:1.6.0'
  compile 'javax.resource:javax.resource-api:1.7'
  compile 'javax.transaction:javax.transaction-api:1.2'
  compile 'mx4j:mx4j:3.0.2'
  compile 'mx4j:mx4j-remote:3.0.2'
  compile 'mx4j:mx4j-tools:3.0.1'
  compileOnly 'net.sourceforge.jline:jline:1.0.S2-B'
  compileOnly "org.eclipse.jetty:jetty-http:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-io:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-security:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-server:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-util:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-xml:${jettyVersion}"
  compileOnly "org.springframework:spring-aop:${springVersion}"
  compileOnly "org.springframework:spring-beans:${springVersion}"
  compileOnly "org.springframework:spring-context:${springVersion}"
  compileOnly "org.springframework:spring-context-support:${springVersion}"
  compileOnly "org.springframework:spring-core:${springVersion}"
  compileOnly "org.springframework:spring-expression:${springVersion}"
  compileOnly "org.springframework:spring-web:${springVersion}"
  compileOnly "org.springframework:spring-webmvc:${springVersion}"
  compileOnly "org.springframework:spring-tx:${springVersion}"
  compileOnly 'org.springframework.shell:spring-shell:1.0.0.RELEASE'
  compile 'org.xerial.snappy:snappy-java:1.1.4'

  compileOnly "org.apache.hadoop:hadoop-annotations:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-auth:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-common:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-hdfs:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-mapreduce-client-core:${hadoopVersion}"
  compileOnly "com.google.protobuf:protobuf-java:${protobufVersion}"
  compileOnly "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
  compileOnly "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
  compileOnly "org.eclipse.jetty:jetty-server:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-util:${jettyVersion}"
  compileOnly "com.google.code.findbugs:jsr305:${jsr305Version}"
  compileOnly "com.esotericsoftware:kryo-shaded:${kryoVersion}"
  compileOnly "org.apache.spark:spark-unsafe_${scalaBinaryVersion}:${sparkVersion}"

  compile "io.netty:netty-all:${nettyAllVersion}"
  compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
  compile 'org.apache.htrace:htrace-core:3.2.0-incubating'
  compile "org.codehaus.jackson:jackson-core-asl:${jackson1Version}"
  compile "org.codehaus.jackson:jackson-mapper-asl:${jackson1Version}"

  compile 'org.apache.commons:commons-pool2:2.4.2'
  compile "com.google.guava:guava:${guavaVersion}"
  compile 'xml-apis:xml-apis:1.0.b2'
  compile('com.io7m.xom:xom:1.2.10') {
    exclude(group: 'xalan', module: 'xalan')
    exclude(group: 'xerces', module: 'xercesImpl')
    exclude(group: 'xml-apis', module: 'xml-apis')
  }

  compileOnly group: 'org.apache.hbase', name: 'hbase-protocol', version: hbaseVersion
  compileOnly(group: 'org.apache.hbase', name: 'hbase-common', version: hbaseVersion) {
    exclude(group: 'org.apache.hbase', module: 'hbase-annotations')
  }
  compileOnly(group: 'org.apache.hbase', name: 'hbase-client', version: hbaseVersion) {
    exclude(group: 'org.apache.hbase', module: 'hbase-annotations')
    exclude(group: 'io.netty', module: 'netty')
  }
  compileOnly(group: 'org.apache.hbase', name: 'hbase-server', version: hbaseVersion) {
    exclude(group: 'org.apache.hbase', module: 'hbase-annotations')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-core')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-client')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-mapreduce-client-jobclient')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-mapreduce-client-core')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-auth')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-annotations')
    exclude(group: 'org.apache.hadoop', module: 'hadoop-hdfs')
    exclude(group: 'org.apache.hbase', module: 'hbase-hadoop1-compat')
    exclude(group: 'commons-math', module: 'commons-math')
    exclude(group: 'org.slf4j', module: 'slf4j-api')
    exclude(group: 'com.sun.jersey', module: 'jersey-server')
    exclude(group: 'com.sun.jersey', module: 'jersey-servlet')
    exclude(group: 'com.sun.jersey', module: 'jersey-core')
    exclude(group: 'com.sun.jersey', module: 'jersey-json')
    exclude(group: 'commons-io', module: 'commons-io')
  }
  compileOnly 'com.jcraft:jsch:0.1.53'
  compileOnly "org.apache.ant:ant:${antVersion}"

  compile project(subprojectBase + 'gemfire-jgroups')
  compile project(subprojectBase + 'gemfire-util')
  compile project(subprojectBase + 'gemfire-shared')
  compile project(subprojectBase + 'gemfire-trove')
  compile project(subprojectBase + 'snappydata-util')

  jcaCompile sourceSets.main.output
}

// Creates the version properties file and writes it to the classes dir
task createVersionPropertiesFile(dependsOn: 'processResources') {
  def propertiesDir = file("${buildDir}/resources/main/com/gemstone/gemfire/internal")
  outputs.file "${propertiesDir}/GemFireVersion.properties"
  inputs.dir compileJava.destinationDir

  doLast {
    def props = [
      'Product-Name'      : PRODUCT_NAME,
      'Product-Version'   : version,
      'Build-Id'          : buildIdPrefix + buildNumber,
      'Build-Date'        : buildDate,
      'Build-Platform'    : "${osName.getName()} ${osVersion} ${osArch}",
      'Build-Java-Version': jdkVersion,
      'Source-Date'       : sourceDate,
      'Source-Revision'   : commitId,
      'Source-Repository' : gitBranch
    ]

    writeProperties(propertiesDir, 'GemFireVersion.properties',
        "Properties that control what version ${GEMFIRE_PRODUCT} will think it is. Changing these values may cause ${GEMFIRE_PRODUCT} to no longer function.", props)
  }
}

jar {
  from sourceSets.main.output
  from sourceSets.jca.output

  exclude 'com/gemstone/gemfire/management/internal/web/**'
  exclude 'com/gemstone/gemfire/internal/i18n/StringIdResourceBundle_ja.txt'
  exclude 'com/gemstone/gemfire/admin/doc-files/ds4_0.dtd'

  doLast {
    // copy the native JNI libraries
    copy {
      from "${projectDir}/lib"
      into "${buildDir}/libs"
    }
    copy {
      from "${projectDir}/lib"
      into sourceSets.main.output.classesDir
    }
  }
}

task webJar (type: Jar, dependsOn: classes) {
  description 'Assembles the jar archive containing the gemfire management web classes.'
  from sourceSets.main.output
  baseName 'gemfire-web'
  include 'com/gemstone/gemfire/management/internal/web/**'
}

task raJar (type: Jar, dependsOn: classes) {
  description 'Assembles the jar archive that contains the JCA classes'
  from sourceSets.jca.output
  exclude 'com/gemstone/gemfire/ra/**'
  archiveName 'ra.jar'
}

task jcaJar (type: Jar, dependsOn: raJar) {
  description 'Assembles the jar archive that contains the JCA bundle'
  baseName 'gemfire-jca'
  extension 'rar'
  metaInf { from 'src/jca/ra.xml' }
  from raJar.archivePath
}

compileJava.dependsOn createVersionPropertiesFile
